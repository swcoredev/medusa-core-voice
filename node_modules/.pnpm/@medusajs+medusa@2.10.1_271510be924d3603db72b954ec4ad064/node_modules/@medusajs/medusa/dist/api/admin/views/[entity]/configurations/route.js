"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.POST = exports.GET = void 0;
const utils_1 = require("@medusajs/framework/utils");
const core_flows_1 = require("@medusajs/core-flows");
/**
 * @ignore
 *
 * @privateRemarks
 * Remove the `ignore` tag once the feature is ready. Otherwise,
 * it will be generated in the documentation.
 */
const GET = async (req, res) => {
    const settingsService = req.scope.resolve(utils_1.Modules.SETTINGS);
    const filters = {
        ...req.filterableFields,
        entity: req.params.entity,
        $or: [{ user_id: req.auth_context.actor_id }, { is_system_default: true }],
    };
    const [viewConfigurations, count] = await settingsService.listAndCountViewConfigurations(filters, req.queryConfig);
    res.json({
        view_configurations: viewConfigurations,
        count,
        offset: req.queryConfig.pagination?.skip || 0,
        limit: req.queryConfig.pagination?.take || 20,
    });
};
exports.GET = GET;
/**
 * @ignore
 *
 * @privateRemarks
 * Remove the `ignore` tag once the feature is ready. Otherwise,
 * it will be generated in the documentation.
 */
const POST = async (req, res) => {
    // Validate: name is required unless creating a system default
    if (!req.body.is_system_default && !req.body.name) {
        throw new utils_1.MedusaError(utils_1.MedusaError.Types.INVALID_DATA, "Name is required unless creating a system default view");
    }
    const input = {
        ...req.body,
        entity: req.params.entity,
        user_id: req.body.is_system_default ? null : req.auth_context.actor_id,
    };
    const { result } = await (0, core_flows_1.createViewConfigurationWorkflow)(req.scope).run({
        input,
    });
    return res.json({ view_configuration: result });
};
exports.POST = POST;
//# sourceMappingURL=route.js.map