import { z } from "zod";
export declare const AdminGetOrdersOrderParams: z.ZodObject<{
    fields: z.ZodOptional<z.ZodString>;
} & {
    id: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    status: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    created_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
    updated_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
    deleted_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
}, "strip", z.ZodTypeAny, {
    id?: string | string[] | undefined;
    fields?: string | undefined;
    created_at?: any;
    updated_at?: any;
    deleted_at?: any;
    status?: string | string[] | undefined;
}, {
    id?: string | string[] | undefined;
    fields?: string | undefined;
    created_at?: any;
    updated_at?: any;
    deleted_at?: any;
    status?: string | string[] | undefined;
}>;
export type AdminGetOrdersOrderParamsType = z.infer<typeof AdminGetOrdersOrderParams>;
/**
 * Parameters used to filter and configure the pagination of the retrieved order.
 */
export declare const AdminGetOrdersParams: z.ZodObject<{
    fields: z.ZodOptional<z.ZodString>;
} & {
    offset: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodNumber>>, number, unknown>;
    limit: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodNumber>>, number, unknown>;
    order: z.ZodOptional<z.ZodString> | z.ZodDefault<z.ZodOptional<z.ZodString>>;
    with_deleted: z.ZodEffects<z.ZodOptional<z.ZodBoolean>, boolean | undefined, unknown>;
} & {
    id: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    order_id: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    status: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    created_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
    updated_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
    deleted_at: z.ZodOptional<z.ZodUnion<[any, z.ZodObject<{
        $eq: any;
        $ne: any;
        $in: any;
        $nin: any;
        $like: any;
        $ilike: any;
        $re: any;
        $contains: any;
        $gt: any;
        $gte: any;
        $lt: any;
        $lte: any;
    }, "strip", z.ZodTypeAny, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }, {
        $eq?: any;
        $ne?: any;
        $in?: any;
        $nin?: any;
        $like?: any;
        $ilike?: any;
        $re?: any;
        $contains?: any;
        $gt?: any;
        $gte?: any;
        $lt?: any;
        $lte?: any;
    }>]>>;
}, "strip", z.ZodTypeAny, {
    offset: number;
    limit: number;
    order?: string | undefined;
    id?: string | string[] | undefined;
    fields?: string | undefined;
    created_at?: any;
    updated_at?: any;
    deleted_at?: any;
    order_id?: string | string[] | undefined;
    status?: string | string[] | undefined;
    with_deleted?: boolean | undefined;
}, {
    order?: string | undefined;
    id?: string | string[] | undefined;
    fields?: string | undefined;
    created_at?: any;
    updated_at?: any;
    deleted_at?: any;
    order_id?: string | string[] | undefined;
    status?: string | string[] | undefined;
    offset?: unknown;
    limit?: unknown;
    with_deleted?: unknown;
}>;
export type AdminGetOrdersParamsType = z.infer<typeof AdminGetOrdersParams>;
export declare const AdminPostOrderExchangesReqSchema: z.ZodObject<{
    order_id: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    internal_note: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
}, "strip", z.ZodTypeAny, {
    order_id: string;
    metadata?: Record<string, unknown> | null | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
}, {
    order_id: string;
    metadata?: Record<string, unknown> | null | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
}>;
export type AdminPostOrderExchangesReqSchemaType = z.infer<typeof AdminPostOrderExchangesReqSchema>;
export declare const AdminPostReceiveExchangesReqSchema: z.ZodObject<{
    internal_note: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, unknown> | null | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
}, {
    metadata?: Record<string, unknown> | null | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
}>;
export type AdminPostReceiveExchangesReqSchemaType = z.infer<typeof AdminPostReceiveExchangesReqSchema>;
export declare const AdminPostReceiveExchangeItemsReqSchema: z.ZodObject<{
    items: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        quantity: z.ZodNumber;
        internal_note: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        quantity: number;
        internal_note?: string | undefined;
    }, {
        id: string;
        quantity: number;
        internal_note?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    items: {
        id: string;
        quantity: number;
        internal_note?: string | undefined;
    }[];
}, {
    items: {
        id: string;
        quantity: number;
        internal_note?: string | undefined;
    }[];
}>;
export type AdminPostReceiveExchangeItemsReqSchemaType = z.infer<typeof AdminPostReceiveExchangeItemsReqSchema>;
export declare const AdminPostCancelExchangeReqSchema: z.ZodObject<{
    no_notification: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    no_notification?: boolean | undefined;
}, {
    no_notification?: boolean | undefined;
}>;
export type AdminPostCancelExchangeReqSchemaType = z.infer<typeof AdminPostCancelExchangeReqSchema>;
export declare const AdminPostExchangesRequestItemsReturnActionReqSchema: z.ZodObject<{
    quantity: z.ZodOptional<z.ZodNumber>;
    internal_note: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    reason_id: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    metadata: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, unknown> | null | undefined;
    internal_note?: string | null | undefined;
    reason_id?: string | null | undefined;
    quantity?: number | undefined;
}, {
    metadata?: Record<string, unknown> | null | undefined;
    internal_note?: string | null | undefined;
    reason_id?: string | null | undefined;
    quantity?: number | undefined;
}>;
export type AdminPostExchangesRequestItemsReturnActionReqSchemaType = z.infer<typeof AdminPostExchangesRequestItemsReturnActionReqSchema>;
export declare const AdminPostExchangesShippingReqSchema: z.ZodObject<{
    shipping_option_id: z.ZodString;
    custom_amount: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    internal_note: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    shipping_option_id: string;
    metadata?: Record<string, unknown> | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
    custom_amount?: number | undefined;
}, {
    shipping_option_id: string;
    metadata?: Record<string, unknown> | undefined;
    description?: string | undefined;
    internal_note?: string | undefined;
    custom_amount?: number | undefined;
}>;
export type AdminPostExchangesShippingReqSchemaType = z.infer<typeof AdminPostExchangesShippingReqSchema>;
export declare const AdminPostExchangesShippingActionReqSchema: z.ZodObject<{
    custom_amount: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    internal_note: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    metadata: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodUnknown>>>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, unknown> | null | undefined;
    internal_note?: string | null | undefined;
    custom_amount?: number | null | undefined;
}, {
    metadata?: Record<string, unknown> | null | undefined;
    internal_note?: string | null | undefined;
    custom_amount?: number | null | undefined;
}>;
export type AdminPostExchangesShippingActionReqSchemaType = z.infer<typeof AdminPostExchangesShippingActionReqSchema>;
export declare const AdminPostExchangesAddItemsReqSchema: z.ZodObject<{
    items: z.ZodArray<z.ZodObject<{
        variant_id: z.ZodString;
        quantity: z.ZodNumber;
        unit_price: z.ZodOptional<z.ZodNumber>;
        internal_note: z.ZodOptional<z.ZodString>;
        allow_backorder: z.ZodOptional<z.ZodBoolean>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        quantity: number;
        variant_id: string;
        metadata?: Record<string, unknown> | undefined;
        internal_note?: string | undefined;
        unit_price?: number | undefined;
        allow_backorder?: boolean | undefined;
    }, {
        quantity: number;
        variant_id: string;
        metadata?: Record<string, unknown> | undefined;
        internal_note?: string | undefined;
        unit_price?: number | undefined;
        allow_backorder?: boolean | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    items: {
        quantity: number;
        variant_id: string;
        metadata?: Record<string, unknown> | undefined;
        internal_note?: string | undefined;
        unit_price?: number | undefined;
        allow_backorder?: boolean | undefined;
    }[];
}, {
    items: {
        quantity: number;
        variant_id: string;
        metadata?: Record<string, unknown> | undefined;
        internal_note?: string | undefined;
        unit_price?: number | undefined;
        allow_backorder?: boolean | undefined;
    }[];
}>;
export type AdminPostExchangesAddItemsReqSchemaType = z.infer<typeof AdminPostExchangesAddItemsReqSchema>;
export declare const AdminPostExchangesReturnRequestItemsReqSchema: z.ZodObject<{
    items: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        quantity: z.ZodNumber;
        description: z.ZodOptional<z.ZodString>;
        internal_note: z.ZodOptional<z.ZodString>;
        reason_id: z.ZodOptional<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        quantity: number;
        metadata?: Record<string, unknown> | undefined;
        description?: string | undefined;
        internal_note?: string | undefined;
        reason_id?: string | undefined;
    }, {
        id: string;
        quantity: number;
        metadata?: Record<string, unknown> | undefined;
        description?: string | undefined;
        internal_note?: string | undefined;
        reason_id?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    items: {
        id: string;
        quantity: number;
        metadata?: Record<string, unknown> | undefined;
        description?: string | undefined;
        internal_note?: string | undefined;
        reason_id?: string | undefined;
    }[];
}, {
    items: {
        id: string;
        quantity: number;
        metadata?: Record<string, unknown> | undefined;
        description?: string | undefined;
        internal_note?: string | undefined;
        reason_id?: string | undefined;
    }[];
}>;
export type AdminPostExchangesReturnRequestItemsReqSchemaType = z.infer<typeof AdminPostExchangesReturnRequestItemsReqSchema>;
export declare const AdminPostExchangesDismissItemsActionReqSchema: z.ZodObject<{
    quantity: z.ZodOptional<z.ZodNumber>;
    internal_note: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "strip", z.ZodTypeAny, {
    internal_note?: string | null | undefined;
    quantity?: number | undefined;
}, {
    internal_note?: string | null | undefined;
    quantity?: number | undefined;
}>;
export type AdminPostExchangesDismissItemsActionReqSchemaType = z.infer<typeof AdminPostExchangesDismissItemsActionReqSchema>;
export declare const AdminPostExchangesConfirmRequestReqSchema: z.ZodObject<{
    no_notification: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    no_notification?: boolean | undefined;
}, {
    no_notification?: boolean | undefined;
}>;
export type AdminPostExchangesConfirmRequestReqSchemaType = z.infer<typeof AdminPostExchangesConfirmRequestReqSchema>;
export declare const AdminPostExchangesItemsActionReqSchema: z.ZodObject<{
    quantity: z.ZodOptional<z.ZodNumber>;
    internal_note: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "strip", z.ZodTypeAny, {
    internal_note?: string | null | undefined;
    quantity?: number | undefined;
}, {
    internal_note?: string | null | undefined;
    quantity?: number | undefined;
}>;
export type AdminPostExchangesItemsActionReqSchemaType = z.infer<typeof AdminPostExchangesItemsActionReqSchema>;
//# sourceMappingURL=validators.d.ts.map