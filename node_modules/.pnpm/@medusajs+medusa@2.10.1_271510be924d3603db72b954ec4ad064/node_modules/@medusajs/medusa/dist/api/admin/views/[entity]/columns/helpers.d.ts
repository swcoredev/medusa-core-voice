import { HttpTypes } from "@medusajs/types";
import { ENTITY_MAPPINGS } from "./entity-mappings";
export declare const getColumnCategory: (fieldName: string, dataType: string, semanticType?: string) => HttpTypes.AdminColumn["category"];
export declare const formatFieldName: (field: string) => string;
export declare const getUnderlyingType: (type: any) => any;
export declare const isArrayField: (type: any) => boolean;
export declare const isSingleRelationship: (type: any) => boolean;
export declare const shouldExcludeField: (fieldName: string, fieldFilters: any) => boolean;
export declare const getTypeInfoFromGraphQLType: (type: any, fieldName: string) => {
    data_type: HttpTypes.AdminColumn["data_type"];
    semantic_type: string;
    context?: string;
};
export declare const DEFAULT_COLUMN_ORDERS: Record<string, number>;
/**
 * Generates columns for a given entity by introspecting the GraphQL schema
 * @param entity - The entity name to generate columns for
 * @param entityMapping - The entity mapping configuration
 * @returns Array of columns or null if generation fails
 */
export declare const generateEntityColumns: (entity: string, entityMapping: (typeof ENTITY_MAPPINGS)[keyof typeof ENTITY_MAPPINGS]) => HttpTypes.AdminColumn[] | null;
//# sourceMappingURL=helpers.d.ts.map