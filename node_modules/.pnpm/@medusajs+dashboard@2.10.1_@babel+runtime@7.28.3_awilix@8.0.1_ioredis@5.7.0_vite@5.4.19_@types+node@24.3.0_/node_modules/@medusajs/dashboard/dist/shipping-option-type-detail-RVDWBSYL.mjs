import {
  useDeleteShippingOptionTypeAction
} from "./chunk-CDYPBPM6.mjs";
import {
  SingleColumnPage
} from "./chunk-2RQLKDBF.mjs";
import {
  useExtension
} from "./chunk-C5P5PL3E.mjs";
import {
  SingleColumnPageSkeleton
} from "./chunk-LPEUYMRK.mjs";
import {
  ActionMenu
} from "./chunk-3NJTXRIY.mjs";
import "./chunk-OC7BQLYI.mjs";
import {
  shippingOptionTypesQueryKeys,
  useShippingOptionType
} from "./chunk-4NIK4FS3.mjs";
import "./chunk-KOSCMAIC.mjs";
import "./chunk-X6DSNTTX.mjs";
import "./chunk-I6E6CALJ.mjs";
import "./chunk-4RG7UJCT.mjs";
import "./chunk-QTCZFYFH.mjs";
import "./chunk-B4GODIOW.mjs";
import "./chunk-ENV6YVOM.mjs";
import "./chunk-PIR2H25N.mjs";
import "./chunk-RLY2SL5E.mjs";
import "./chunk-C5LYZZZ5.mjs";
import "./chunk-2ZKVRTBW.mjs";
import "./chunk-ZCZL3STK.mjs";
import "./chunk-OHSRRFGN.mjs";
import "./chunk-F6PXCY3N.mjs";
import "./chunk-NCR5UWRI.mjs";
import "./chunk-ZODJNBAV.mjs";
import "./chunk-GRT22PE5.mjs";
import "./chunk-32IQRUVY.mjs";
import "./chunk-KSRI5LOF.mjs";
import "./chunk-YI4CZGTU.mjs";
import "./chunk-BFNH5UWD.mjs";
import "./chunk-4Q4LIFFO.mjs";
import "./chunk-V2LANK5S.mjs";
import "./chunk-QZ6PT4QV.mjs";
import "./chunk-QL4XKIVL.mjs";
import "./chunk-X4X5KUGQ.mjs";
import {
  queryClient
} from "./chunk-FXYH54JP.mjs";
import "./chunk-774WSTCC.mjs";
import {
  sdk
} from "./chunk-DEQUVHHE.mjs";
import "./chunk-RPUOO7AV.mjs";

// src/routes/shipping-option-types/shipping-option-type-detail/breadcrumb.tsx
import { jsx } from "react/jsx-runtime";
var ShippingOptionTypeDetailBreadcrumb = (props) => {
  const { id } = props.params || {};
  const { shipping_option_type } = useShippingOptionType(id, void 0, {
    initialData: props.data,
    enabled: Boolean(id)
  });
  if (!shipping_option_type) {
    return null;
  }
  return /* @__PURE__ */ jsx("span", { children: shipping_option_type.label });
};

// src/routes/shipping-option-types/shipping-option-type-detail/loader.ts
var shippingOptionTypeDetailQuery = (id) => ({
  queryKey: shippingOptionTypesQueryKeys.detail(id),
  queryFn: async () => sdk.admin.shippingOptionType.retrieve(id)
});
var shippingOptionTypeLoader = async ({
  params
}) => {
  const id = params.id;
  const query = shippingOptionTypeDetailQuery(id);
  return queryClient.ensureQueryData(query);
};

// src/routes/shipping-option-types/shipping-option-type-detail/shipping-option-type-detail.tsx
import { useLoaderData, useParams } from "react-router-dom";

// src/routes/shipping-option-types/shipping-option-type-detail/components/shipping-option-type-general-section/shipping-option-type-general-section.tsx
import { PencilSquare, Trash } from "@medusajs/icons";
import { Container, Heading, Text } from "@medusajs/ui";
import { useTranslation } from "react-i18next";
import { jsx as jsx2, jsxs } from "react/jsx-runtime";
var ShippingOptionTypeGeneralSection = ({
  shippingOptionType
}) => {
  const { t } = useTranslation();
  const handleDelete = useDeleteShippingOptionTypeAction(
    shippingOptionType.id,
    shippingOptionType.label
  );
  return /* @__PURE__ */ jsxs(Container, { className: "divide-y p-0", children: [
    /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-between  px-6 py-4", children: [
      /* @__PURE__ */ jsx2(Heading, { children: shippingOptionType.label }),
      /* @__PURE__ */ jsx2(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t("actions.edit"),
                  icon: /* @__PURE__ */ jsx2(PencilSquare, {}),
                  to: "edit"
                }
              ]
            },
            {
              actions: [
                {
                  label: t("actions.delete"),
                  icon: /* @__PURE__ */ jsx2(Trash, {}),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
      /* @__PURE__ */ jsx2(Text, { size: "small", leading: "compact", weight: "plus", children: t("fields.code") }),
      /* @__PURE__ */ jsx2(Text, { size: "small", leading: "compact", children: shippingOptionType.code })
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
      /* @__PURE__ */ jsx2(Text, { size: "small", leading: "compact", weight: "plus", children: t("fields.description") }),
      /* @__PURE__ */ jsx2(Text, { size: "small", leading: "compact", children: shippingOptionType.description || "-" })
    ] })
  ] });
};

// src/routes/shipping-option-types/shipping-option-type-detail/shipping-option-type-detail.tsx
import { jsx as jsx3 } from "react/jsx-runtime";
var ShippingOptionTypeDetail = () => {
  const { id } = useParams();
  const initialData = useLoaderData();
  const { shipping_option_type, isPending, isError, error } = useShippingOptionType(id, void 0, {
    initialData
  });
  const { getWidgets } = useExtension();
  if (isPending || !shipping_option_type) {
    return /* @__PURE__ */ jsx3(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
  }
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ jsx3(
    SingleColumnPage,
    {
      widgets: {
        after: getWidgets("shipping_option_type.details.after"),
        before: getWidgets("shipping_option_type.details.before")
      },
      showJSON: true,
      showMetadata: true,
      data: shipping_option_type,
      children: /* @__PURE__ */ jsx3(
        ShippingOptionTypeGeneralSection,
        {
          shippingOptionType: shipping_option_type
        }
      )
    }
  );
};
export {
  ShippingOptionTypeDetailBreadcrumb as Breadcrumb,
  ShippingOptionTypeDetail as Component,
  shippingOptionTypeLoader as loader
};
