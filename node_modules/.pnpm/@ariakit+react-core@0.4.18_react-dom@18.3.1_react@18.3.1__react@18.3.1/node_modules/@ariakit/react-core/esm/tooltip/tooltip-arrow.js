"use client";
import {
  useTooltipContext
} from "../__chunks/L3J7PHFC.js";
import {
  usePopoverArrow
} from "../__chunks/NLAT5IRT.js";
import "../__chunks/2SM3RB2N.js";
import "../__chunks/7Z7JH52O.js";
import "../__chunks/Y67KZUMI.js";
import "../__chunks/T2AZQXQU.js";
import "../__chunks/ABN76PSX.js";
import "../__chunks/RTNCFSKZ.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/VOQWLFSQ.js";
import "../__chunks/5GGHRIN3.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/tooltip/tooltip-arrow.tsx
import { invariant } from "@ariakit/core/utils/misc";
var TagName = "div";
var useTooltipArrow = createHook(
  function useTooltipArrow2(_a) {
    var _b = _a, { store, size = 16 } = _b, props = __objRest(_b, ["store", "size"]);
    const context = useTooltipContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "TooltipArrow must be wrapped in a Tooltip component."
    );
    props = usePopoverArrow(__spreadValues({ store, size }, props));
    return props;
  }
);
var TooltipArrow = forwardRef(function TooltipArrow2(props) {
  const htmlProps = useTooltipArrow(props);
  return createElement(TagName, htmlProps);
});
export {
  TooltipArrow,
  useTooltipArrow
};
