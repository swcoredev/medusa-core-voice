"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _VNVMHTCYcjs = require('./VNVMHTCY.cjs');


var _G2FBG6ELcjs = require('./G2FBG6EL.cjs');


var _SIL3OXTPcjs = require('./SIL3OXTP.cjs');




var _WULEED4Qcjs = require('./WULEED4Q.cjs');


var _OZM4QA2Vcjs = require('./OZM4QA2V.cjs');



var _7EQBAZ46cjs = require('./7EQBAZ46.cjs');

// src/menubar/menubar.tsx
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
var useMenubar = _WULEED4Qcjs.createHook.call(void 0, 
  function useMenubar2(_a) {
    var _b = _a, {
      store: storeProp,
      composite = true,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = _7EQBAZ46cjs.__objRest.call(void 0, _b, [
      "store",
      "composite",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = _VNVMHTCYcjs.useMenubarProviderContext.call(void 0, );
    storeProp = storeProp || context;
    const store = _G2FBG6ELcjs.useMenubarStore.call(void 0, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => !composite || state.orientation === "both" ? void 0 : state.orientation
    );
    props = _OZM4QA2Vcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _VNVMHTCYcjs.MenubarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (composite) {
      props = _7EQBAZ46cjs.__spreadValues.call(void 0, {
        role: "menubar",
        "aria-orientation": orientation
      }, props);
    }
    props = _SIL3OXTPcjs.useComposite.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, { store, composite }, props));
    return props;
  }
);
var Menubar = _WULEED4Qcjs.forwardRef.call(void 0, function Menubar2(props) {
  const htmlProps = useMenubar(props);
  return _WULEED4Qcjs.createElement.call(void 0, TagName, htmlProps);
});




exports.useMenubar = useMenubar; exports.Menubar = Menubar;
