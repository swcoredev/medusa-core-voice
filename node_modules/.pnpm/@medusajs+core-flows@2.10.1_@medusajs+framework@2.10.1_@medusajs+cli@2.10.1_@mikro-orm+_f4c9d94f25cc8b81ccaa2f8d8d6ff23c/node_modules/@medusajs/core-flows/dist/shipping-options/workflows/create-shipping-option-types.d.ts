import { AdditionalData, FulfillmentTypes } from "@medusajs/framework/types";
import { WorkflowData } from "@medusajs/framework/workflows-sdk";
/**
 * The data to create one or more shipping option types, along with custom data that's passed to the workflow's hooks.
 */
export type CreateShippingOptionTypesWorkflowInput = {
    /**
     * The shipping option types to create.
     */
    shipping_option_types: FulfillmentTypes.CreateShippingOptionTypeDTO[];
} & AdditionalData;
export declare const createShippingOptionTypesWorkflowId = "create-shipping-option-types";
/**
 * This workflow creates one or more shipping option types. It's used by the
 * [Create Shipping Option Type Admin API Route](https://docs.medusajs.com/api/admin#shipping-option-types_postshippingoptiontypes).
 *
 * This workflow has a hook that allows you to perform custom actions on the created shipping option types. For example, you can pass under `additional_data` custom data that
 * allows you to create custom data models linked to the shipping option types.
 *
 * You can also use this workflow within your own custom workflows, allowing you to wrap custom logic around shipping option type creation.
 *
 * @since 2.10.0
 *
 * @example
 * const { result } = await createShippingOptionTypesWorkflow(container)
 * .run({
 *   input: {
 *     shipping_option_types: [
 *       {
 *         label: "Standard",
 *         code: "standard",
 *         description: "Ship in 2-3 days."
 *       }
 *     ],
 *     additional_data: {
 *       erp_id: "123"
 *     }
 *   }
 * })
 *
 * @summary
 *
 * Create one or more shipping option types.
 *
 * @property hooks.shippingOptionTypesCreated - This hook is executed after the shipping option types are created. You can consume this hook to perform custom actions on the created shipping option types.
 */
export declare const createShippingOptionTypesWorkflow: import("@medusajs/framework/workflows-sdk").ReturnWorkflow<CreateShippingOptionTypesWorkflowInput, FulfillmentTypes.ShippingOptionTypeDTO[], [import("@medusajs/framework/workflows-sdk").Hook<"shippingOptionTypesCreated", {
    shipping_option_types: (FulfillmentTypes.ShippingOptionTypeDTO | WorkflowData<FulfillmentTypes.ShippingOptionTypeDTO>)[] & FulfillmentTypes.ShippingOptionTypeDTO[] & import("@medusajs/framework/workflows-sdk").WorkflowDataProperties<FulfillmentTypes.ShippingOptionTypeDTO[]> & {
        config(config: {
            name?: string;
        } & Omit<import("@medusajs/orchestration").TransactionStepsDefinition, "next" | "uuid" | "action">): WorkflowData<FulfillmentTypes.ShippingOptionTypeDTO[]>;
    } & import("@medusajs/framework/workflows-sdk").StepFunctionReturnConfig<FulfillmentTypes.ShippingOptionTypeDTO[]>;
    additional_data: ((Record<string, unknown> | WorkflowData<Record<string, unknown> | undefined>) & Record<string, unknown>) | undefined;
}, unknown>]>;
//# sourceMappingURL=create-shipping-option-types.d.ts.map