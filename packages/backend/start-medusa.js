require('dotenv').config();

async function startMedusa() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ Medusa...');
    console.log('üìä DATABASE_URL:', process.env.DATABASE_URL);
    console.log('üî¥ REDIS_URL:', process.env.REDIS_URL);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    const { Client } = require('pg');
    const client = new Client({
      host: 'localhost',
      port: 5433,
      database: 'medusa-db',
      user: 'medusa',
      password: 'medusadbpass'
    });
    
    console.log('üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...');
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    await client.end();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º Medusa
    console.log('üéØ –ó–∞–ø—É—Å–∫ Medusa —Å–µ—Ä–≤–µ—Ä–∞...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º spawn –¥–ª—è –∑–∞–ø—É—Å–∫–∞ medusa develop
    const { spawn } = require('child_process');
    const medusaProcess = spawn('npx', ['@medusajs/medusa-cli', 'develop'], {
      stdio: 'inherit',
      env: {
        ...process.env,
        NODE_ENV: 'development'
      }
    });
    
    medusaProcess.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Medusa:', error.message);
    });
    
    medusaProcess.on('exit', (code) => {
      console.log(`üõë Medusa –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —Å –∫–æ–¥–æ–º: ${code}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

startMedusa(); 